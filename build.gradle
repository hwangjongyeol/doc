buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}
plugins {
    id "org.springframework.boot" version "2.4.5"
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
    id 'java'
}
archivesBaseName ='tid-hub-api'
group = 'tid.hub.api.application'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'
repositories {
	mavenCentral()
}
dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.json:json:20190722'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'
    implementation 'io.swagger:swagger-annotations:1.5.21'
    implementation 'io.swagger:swagger-models:1.5.21'
    implementation group: 'commons-lang', name: 'commons-lang', version: '2.6'
    implementation group: 'commons-codec', name: 'commons-codec', version: '1.5'
    implementation group: 'commons-io', name: 'commons-io', version: '2.6'
    implementation group: 'org.apache.commons', name: 'commons-text', version: '1.8'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor('org.projectlombok:lombok:1.18.24')
    implementation 'commons-io:commons-io:2.6'
    implementation group: 'commons-fileupload', name: 'commons-fileupload', version: '1.4'
    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.13'
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation group: 'org.springframework.data', name: 'spring-data-commons', version: '2.4.2'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation group: 'jakarta.persistence', name: 'jakarta.persistence-api', version: '3.1.0'
	implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
	implementation group: 'org.hibernate', name: 'hibernate-core', version: '5.6.10.Final'
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    implementation "com.querydsl:querydsl-apt:${queryDslVersion}"
    implementation "com.querydsl:querydsl-core:${queryDslVersion}"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    runtimeOnly 'mysql:mysql-connector-java'
    //implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-config', version: '2.2.8.RELEASE'
    //implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-hystrix', version: '2.2.10.RELEASE'
    //implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-ribbon', version: '2.2.10.RELEASE'
    //implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign', version: '2.2.10.RELEASE'
    //implementation group: 'io.github.openfeign', name: 'feign-okhttp', version: '10.2.0'
    //implementation group: 'org.springframework.data', name: 'spring-data-commons', version: '2.0.1.RELEASE'
}
test {
    useJUnitPlatform()
}
// queryDSL 설정 추가
// querydsl에서 사용할 경로 설정
def querydslDir = "target/generated-sources"
// JPA 사용 여부와 사용할 경로를 설정
querydsl {
 	jpa = true
 	querydslSourcesDir = querydslDir
}
// build 시 사용할 sourceSet 추가
sourceSets {
 	main.java.srcDir querydslDir
}
// querydsl 이 compileClassPath 를 상속하도록 설정
configurations {
 	querydsl.extendsFrom compileClasspath
}
// querydsl 컴파일시 사용할 옵션 설정
compileQuerydsl {
 	options.annotationProcessorPath = configurations.querydsl
}